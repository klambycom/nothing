// profile = orange
[InputProfile{bg:orange}]<>1-*[InputProfileVariable{bg:orange}]
[InputProfileVariable{bg:orange}]<>1-*[InputProfileValue{bg:orange}]
[ProfileExecutor{bg:orange}]++1-1[InputProfile{bg:orange}]
[ProfileExecutor{bg:orange}]->[InputProfileVariable{bg:orange}]
[ProfileExecutor{bg:orange}]->[InputProfileValue{bg:orange}]
// service.adaptation.effector = yellowgreen
[AbstractEffector{bg:yellowgreen}]++1-1[CompositeService]
[CacheEffector{bg:yellowgreen}]->[Operation]
[CacheEffector{bg:yellowgreen}]->[ServiceDescription]
[CacheEffector{bg:yellowgreen}]++1-1[CompositeService]
[ConfigurationEffector{bg:yellowgreen}]->[CompositeService]
[ConfigurationEffector{bg:yellowgreen}]-^[AbstractEffector]
[WorkflowEffector{bg:yellowgreen}]-^[AbstractEffector]
[WorkflowEffector{bg:yellowgreen}]->[ServiceDescription]
[WorkflowEffector{bg:yellowgreen}]->[CompositeService]
[WorkflowEffector{bg:yellowgreen}]++1-1[CacheEffector]
// service.adaptation.probes = yellowgreen
[AbstractProbe{bg:yellowgreen}]->[ServiceDescription]
[CostProbe{bg:yellowgreen}]->[<<CostProbeInterface>>]
[CostProbe{bg:yellowgreen}]->[ServiceDescription]
[CostProbe{bg:yellowgreen}]-^[AbstractProbe]
[WorkflowProbe{bg:yellowgreen}]->[<<WorkflowProbeInterface>>]
[WorkflowProbe{bg:yellowgreen}]->[ServiceDescription]
[WorkflowProbe{bg:yellowgreen}]-^[AbstractProbe]
// service.adaptation.probes.interfaces = yellowgreen
[<<CostProbeInterface>>{bg:yellowgreen}]
[<<WorkflowProbeInterface>>{bg:yellowgreen}]->[ServiceDescription]
// service.atomic = wheat
[AtomicService{bg:wheat}]-^[AbstractService]
[AtomicService{bg:wheat}]<>1-*[ServiceProfile]
[AtomicService{bg:wheat}]->[ServiceProfile]
[AtomicService{bg:wheat}]->[<<AtomicServiceConfiguration>>]
[AtomicService{bg:wheat}]->[Configuration]
[AtomicService{bg:wheat}]->[OperationAborted]
[AtomicService{bg:wheat}]->[Param]
[AtomicService{bg:wheat}]->[<<ServiceOperation>>]
[ServiceProfile{bg:wheat}]
[<<ServiceProfileAttribute>>{bg:wheat}]
// service.auxilliary = thistle
[AbstractMessage{bg:thistle}]
[AbstractService{bg:thistle}]-.-^[<<MessageReceiver>>]
[AbstractService{bg:thistle}]->[<<ServiceProvider>>]
[AbstractService{bg:thistle}]->[ServiceProviderFactory]
[AbstractService{bg:thistle}]->[Time]
[AbstractService{bg:thistle}]++1-1[ServiceDescription]
[<<AtomicServiceConfiguration>>{bg:thistle}]
[<<CompositeServiceConfiguration>>{bg:thistle}]
[Configuration{bg:thistle}]
[<<LocalOperation>>{bg:thistle}]
[Operation{bg:thistle}]-.-^[<<Serializable>>]
[OperationAborted{bg:thistle}]-^[RuntimeErrorException]
[Param{bg:thistle}]
[Request{bg:thistle}]-^[AbstractMessage]
[Response{bg:thistle}]-^[AbstractMessage]
[ServiceDescription{bg:thistle}]-.-^[<<Serializable>>]
[ServiceDescription{bg:thistle}]<>1-*[Operation]
[<<ServiceOperation>>{bg:thistle}]
[<<ServiceRegistryInterface>>{bg:thistle}]->[ServiceDescription]
[TimeOutError{bg:thistle}]
[XMLBuilder{bg:thistle}]
// service.client = tomato
[AbstractServiceClient{bg:tomato}]-.-^[<<MessageReceiver>>]
[AbstractServiceClient{bg:tomato}]++1-1[<<ServiceProvider>>]
[AbstractServiceClient{bg:tomato}]->[ServiceProviderFactory]
// service.composite = steelblue
[CompositeService{bg:steelblue}]++1-1[ConfigurationEffector]
[CompositeService{bg:steelblue}]++1-1[CostProbe]
[CompositeService{bg:steelblue}]++1-1[WorkflowProbe]
[CompositeService{bg:steelblue}]-^[AbstractService]
[CompositeService{bg:steelblue}]->[CompositeServiceConfiguration]
[CompositeService{bg:steelblue}]->[Configuration]
[CompositeService{bg:steelblue}]->[LocalOperation]
[CompositeService{bg:steelblue}]->[Param]
[CompositeService{bg:steelblue}]->[ServiceDescription]
[CompositeService{bg:steelblue}]->[ServiceOperation]
[CompositeService{bg:steelblue}]->[TimeOutError]
[CompositeService{bg:steelblue}]->[ServiceRegistry]
[CompositeService{bg:steelblue}]<>1-*[AbstractQoSRequirement]
[CompositeService{bg:steelblue}]++1-1[SDCache]
[CompositeService{bg:steelblue}]->[WorkflowEngine]
[CompositeServiceClient{bg:steelblue}]++1-1[AbstractServiceClient]
[SDCache{bg:steelblue}]->[Operation]
[SDCache{bg:steelblue}]<>1-*[ServiceDescription]
[SDCache{bg:steelblue}]->[Time]
// service.provider = violet
[<<MessageReceiver>>{bg:violet}]
[<<ServiceProvider>>{bg:violet}]->[<<MessageReceiver>>]
[ServiceProviderFactory{bg:violet}]->[RSPServiceProvider]
[ServiceProviderFactory{bg:violet}]->[<<ServiceProvider>>]
// service.provider.activemq
[ActiveMQProvider{bg:violet}]-.-^[<<MessageReceiver>>]
[ActiveMQProvider{bg:violet}]-.-^[<<ServiceProvider>>]
// service.provider.rsp
[RSPMessagingService{bg:violet}]<>1-*[<<MessageReceiver>>]
[RSPMessagingService{bg:violet}]->[Time]
[RSPServiceProvider{bg:violet}]++1-1[<<MessageReceiver>>]
[RSPServiceProvider{bg:violet}]-.-^[<<ServiceProvider>>]
[RSPServiceProvider{bg:violet}]++1-1[RSPMessagingService]
// service.registry = slategray
[ServiceRegistry{bg:slategray}]
// service.utility = skyblue
[LogAtomicService{bg:skyblue}]
[LogFailure{bg:skyblue}]
[Time{bg:skyblue}]
// service.workflow = sienna
[AbstractQoSRequirement{bg:sienna}]
[WorkflowEngine{bg:sienna}]
// service.workflow.ast
[ASTNode{bg:sienna}]
[rspLexer{bg:sienna}]
[rspParser{bg:sienna}]
// taskgraph = rosybrown
[TaskGraph{bg:rosybrown}]
[TaskGraphInterpreter{bg:rosybrown}]
// tools = powderblue
[ASTSymTabVisualizer{bg:powderblue}]
[GMLExporter{bg:powderblue}]
[GMLHelper{bg:powderblue}]
[TaskGraphVisualizer{bg:powderblue}]
